---
  - set_fact:
      host_fqdn: "{{ aws_custom_prefix }}.{{ target_dns_zone }}"
      wildcard_entry: "*.{{ aws_custom_prefix }}.{{ target_dns_zone }}"

  - name:  Create EC-2 Instance
    ec2:
      key_name: "{{ ssh_key_name }}"
      instance_type: "{{ instance_type }}"
      instance_tags:
        Name: "{{ instance_name }}"
      image: "{{ aws_ami_id }}"
      wait: yes
      exact_count: 1
      count_tag:
        Name: "{{ instance_name }}"
      group_id: "{{ my_sec_group.group_id }}"
      vpc_subnet_id: "{{ public_subnet_a_id }}"
      assign_public_ip: yes
      region: "{{ aws_region }}"
    register: my_ec2_instances

  - name: Create EBS Volume for /tmp
    ec2_vol:
      instance: "{{ my_ec2_instances.tagged_instances[0].id }}"
      volume_size: 50
      region: "{{ aws_region }}"
      device_name: "{{ tmp_ebs_device_name }}"
      delete_on_termination: yes

  - name: Create EBS Volume for docker_vg
    ec2_vol:
      instance: "{{ my_ec2_instances.tagged_instances[0].id }}"
      volume_size: 250
      region: "{{ aws_region }}"
      device_name: "{{ docker_vg_ebs_device_name }}"
      delete_on_termination: yes

  - name: Create EBS Volume for /var/lib/docker
    ec2_vol:
      instance: "{{ my_ec2_instances.tagged_instances[0].id }}"
      volume_size: 100
      region: "{{ aws_region }}"
      device_name: "{{ var_lib_docker_ebs_device_name }}"
      delete_on_termination: yes

  - name: Create EBS Volume for /persistedvolumes
    ec2_vol:
      instance: "{{ my_ec2_instances.tagged_instances[0].id }}"
      volume_size: 100
      region: "{{ aws_region }}"
      device_name: "{{ persistedvol_ebs_device_name }}"
      delete_on_termination: yes

  - name: Associate Elastic IP
    ec2_eip:
      device_id: "{{ my_ec2_instances.tagged_instances[0].id }}"
      region: "{{ aws_region }}"
      in_vpc: yes
      reuse_existing_ip_allowed: yes
    register: my_eip

  - name: Set DNS Record '{{ host_fqdn }}' for New Instance to Elastic IP {{ my_eip.public_ip }}
    route53: >
      command=create
      zone="{{ target_dns_zone }}"
      record="{{ host_fqdn }}"
      type=A
      ttl=60
      overwrite=yes
      value="{{ my_eip.public_ip }}"

  - name: Set DNS Record '{{ wildcard_entry }}' to Elastic IP {{ my_eip.public_ip }}
    route53: >
      command=create
      zone="{{ target_dns_zone }}"
      record="{{ wildcard_entry }}"
      type=A
      ttl=60
      overwrite=yes
      value="{{ my_eip.public_ip }}"

  - name: Create RDS Subnet Group with {{ vpc_subnet_a_name }} and {{ vpc_subnet_b_name }}
    rds_subnet_group:
      state: "{{ state }}"
      name: "{{ rds_subnet_group_name }}"
      region: "{{ aws_region }}"
      description: RDS Subnet Group for {{ aws_tag_prefix }}
      subnets:
        - "{{ public_subnet_a_id }}"
        - "{{ public_subnet_b_id }}"

  - name: Wait for SSH to come up on {{ my_eip.public_ip }}
    wait_for:
      host: "{{ my_eip.public_ip }}"
      port: 22
      delay: 0
      timeout: 320
      state: started

  # Setting as a fact so we can read it later out of this role
  - name: Settings facts of ec2 instance to be read later
    set_fact:
      ec2_instances:  "{{ my_ec2_instances }}"
      elastic_ip:     "{{ my_eip }}"
